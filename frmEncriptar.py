# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file '.\frmEncriptar.ui'
#
# Created by: PyQt5 UI code generator 5.15.7
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from encriptacion import *
from PyQt5.QtWidgets import QFileDialog
import cv2
import numpy as np
from PyQt5.QtGui import QImage, QPixmap
from PyQt5.QtCore import Qt
from PyQt5.QtWidgets import QMessageBox


class Ui_frmEncriptar(object):
    def setupUi(self, frmEncriptar):
        frmEncriptar.setObjectName("frmEncriptar")
        frmEncriptar.resize(682, 477)
        self.centralwidget = QtWidgets.QWidget(frmEncriptar)
        self.centralwidget.setObjectName("centralwidget")
        self.tabWidget = QtWidgets.QTabWidget(self.centralwidget)
        self.tabWidget.setGeometry(QtCore.QRect(20, 20, 661, 401))
        self.tabWidget.setObjectName("tabWidget")
        self.tab = QtWidgets.QWidget()
        self.tab.setObjectName("tab")
        self.label_3 = QtWidgets.QLabel(self.tab)
        self.label_3.setGeometry(QtCore.QRect(20, 260, 181, 21))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.label_3.setFont(font)
        self.label_3.setObjectName("label_3")
        self.encriptar_2 = QtWidgets.QPushButton(self.tab)
        self.encriptar_2.setGeometry(QtCore.QRect(450, 40, 121, 31))
        icon = QtGui.QIcon()
        icon.addPixmap(
            QtGui.QPixmap(".\\encriptar.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off
        )
        self.encriptar_2.setIcon(icon)
        self.encriptar_2.setObjectName("encriptar_2")
        self.textoencriptado_2 = QtWidgets.QLabel(self.tab)
        self.textoencriptado_2.setGeometry(QtCore.QRect(20, 290, 451, 61))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.textoencriptado_2.setFont(font)
        self.textoencriptado_2.setText("")
        self.textoencriptado_2.setObjectName("textoencriptado_2")
        self.limpiar_2 = QtWidgets.QPushButton(self.tab)
        self.limpiar_2.setGeometry(QtCore.QRect(450, 80, 121, 31))
        icon1 = QtGui.QIcon()
        icon1.addPixmap(
            QtGui.QPixmap(".\\limpiar.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off
        )
        self.limpiar_2.setIcon(icon1)
        self.limpiar_2.setObjectName("limpiar_2")
        self.label_4 = QtWidgets.QLabel(self.tab)
        self.label_4.setGeometry(QtCore.QRect(10, 10, 151, 31))
        font = QtGui.QFont()
        font.setPointSize(20)
        self.label_4.setFont(font)
        self.label_4.setObjectName("label_4")
        self.contenido_2 = QtWidgets.QTextEdit(self.tab)
        self.contenido_2.setGeometry(QtCore.QRect(10, 50, 421, 191))
        self.contenido_2.setObjectName("contenido_2")
        self.cargar_2 = QtWidgets.QPushButton(self.tab)
        self.cargar_2.setGeometry(QtCore.QRect(450, 120, 121, 31))
        icon2 = QtGui.QIcon()
        icon2.addPixmap(
            QtGui.QPixmap(".\\cargar.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off
        )
        self.cargar_2.setIcon(icon2)
        self.cargar_2.setObjectName("cargar_2")
        self.guardar_2 = QtWidgets.QPushButton(self.tab)
        self.guardar_2.setGeometry(QtCore.QRect(450, 160, 121, 31))
        icon3 = QtGui.QIcon()
        icon3.addPixmap(
            QtGui.QPixmap(".\\guardar.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off
        )
        self.guardar_2.setIcon(icon3)
        self.guardar_2.setObjectName("guardar_2")
        self.desencriptar = QtWidgets.QPushButton(self.tab)
        self.desencriptar.setGeometry(QtCore.QRect(450, 200, 121, 31))
        icon4 = QtGui.QIcon()
        icon4.addPixmap(
            QtGui.QPixmap(".\\desencriptar.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off
        )
        self.desencriptar.setIcon(icon4)
        self.desencriptar.setObjectName("desencriptar")
        self.tabWidget.addTab(self.tab, "")
        self.tab_2 = QtWidgets.QWidget()
        self.tab_2.setObjectName("tab_2")
        self.label_2 = QtWidgets.QLabel(self.tab_2)
        self.label_2.setGeometry(QtCore.QRect(20, 50, 181, 31))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.label_2.setFont(font)
        self.label_2.setObjectName("label_2")
        self.encriptar = QtWidgets.QPushButton(self.tab_2)
        self.encriptar.setGeometry(QtCore.QRect(450, 30, 101, 31))
        self.encriptar.setObjectName("encriptar")
        self.imagenEncriptada = QtWidgets.QLabel(self.tab_2)
        self.imagenEncriptada.setGeometry(QtCore.QRect(0, 100, 431, 241))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.imagenEncriptada.setFont(font)
        self.imagenEncriptada.setStyleSheet(
            "background-color: rgb(85, 170, 255);\n" "border-radius: 12px;"
        )
        self.imagenEncriptada.setText("")
        self.imagenEncriptada.setObjectName("imagenEncriptada")
        self.limpiar = QtWidgets.QPushButton(self.tab_2)
        self.limpiar.setGeometry(QtCore.QRect(450, 70, 101, 31))
        self.limpiar.setObjectName("limpiar")
        self.label = QtWidgets.QLabel(self.tab_2)
        self.label.setGeometry(QtCore.QRect(10, 0, 261, 31))
        font = QtGui.QFont()
        font.setPointSize(20)
        self.label.setFont(font)
        self.label.setObjectName("label")
        self.cargar = QtWidgets.QPushButton(self.tab_2)
        self.cargar.setGeometry(QtCore.QRect(450, 110, 101, 31))
        self.cargar.setObjectName("cargar")
        self.guardar = QtWidgets.QPushButton(self.tab_2)
        self.guardar.setGeometry(QtCore.QRect(450, 150, 101, 31))
        self.guardar.setObjectName("guardar")
        self.desencriptarImagen = QtWidgets.QPushButton(self.tab_2)
        self.desencriptarImagen.setGeometry(QtCore.QRect(450, 190, 101, 31))
        self.desencriptarImagen.setObjectName("desencriptarImagen")
        self.tabWidget.addTab(self.tab_2, "")
        frmEncriptar.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(frmEncriptar)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 682, 26))
        self.menubar.setObjectName("menubar")
        frmEncriptar.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(frmEncriptar)
        self.statusbar.setObjectName("statusbar")
        frmEncriptar.setStatusBar(self.statusbar)

        self.retranslateUi(frmEncriptar)
        self.tabWidget.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(frmEncriptar)

        # FUNCIONES
        self.encriptar_2.clicked.connect(self.encriptar_texto)
        self.limpiar_2.clicked.connect(self.limpiar_texto)
        self.desencriptar.clicked.connect(self.desencriptar_texto)
        self.cargar_2.clicked.connect(self.cargar_archivo)
        self.guardar_2.clicked.connect(self.guardar_archivo)

        self.cargar.clicked.connect(self.cargar_imagen)
        self.encriptar.clicked.connect(self.encriptar_imagen)
        self.desencriptarImagen.clicked.connect(self.desencriptar_imagen)
        self.limpiar.clicked.connect(self.limpiar_imagen)
        self.guardar.clicked.connect(self.guardar_imagen_enc)

    def retranslateUi(self, frmEncriptar):
        _translate = QtCore.QCoreApplication.translate
        frmEncriptar.setWindowTitle(_translate("frmEncriptar", "MainWindow"))
        self.label_3.setText(_translate("frmEncriptar", "Mensaje Encriptado"))
        self.encriptar_2.setText(_translate("frmEncriptar", "Encriptar"))
        self.limpiar_2.setText(_translate("frmEncriptar", "Limpiar"))
        self.label_4.setText(_translate("frmEncriptar", "Mensaje"))
        self.cargar_2.setText(_translate("frmEncriptar", "Cargar archivo"))
        self.guardar_2.setText(_translate("frmEncriptar", "Guardar Archivo"))
        self.desencriptar.setText(_translate("frmEncriptar", "desencriptar"))
        self.tabWidget.setTabText(
            self.tabWidget.indexOf(self.tab), _translate("frmEncriptar", "texto")
        )
        self.label_2.setText(_translate("frmEncriptar", "Imagen Encriptada"))
        self.encriptar.setText(_translate("frmEncriptar", "Encriptar"))
        self.limpiar.setText(_translate("frmEncriptar", "Limpiar"))
        self.label.setText(_translate("frmEncriptar", "Encriptar Imagen"))
        self.cargar.setText(_translate("frmEncriptar", "Cargar archivo"))
        self.guardar.setText(_translate("frmEncriptar", "Guardar Archivo"))
        self.desencriptarImagen.setText(_translate("frmEncriptar", "desencriptar"))
        self.tabWidget.setTabText(
            self.tabWidget.indexOf(self.tab_2), _translate("frmEncriptar", "Imagen")
        )

    def encriptar_texto(self):
        texto_original = self.contenido_2.toPlainText()
        if texto_original.strip():
            texto_encriptado = encriptar_texto(texto_original)
            self.textoencriptado_2.setText(f"{texto_encriptado}")
            print("Texto encriptado: ", texto_encriptado)
            self.contenido_2.setText("")
        else:
            self.textoencriptado_2.setText("No hay texto para encriptar.")

    def desencriptar_texto(self):
        texto_encriptado = self.contenido_2.toPlainText()
        if texto_encriptado.strip():
            try:
                texto_original = desencriptar_texto(texto_encriptado)
                self.textoencriptado_2.setText(f"{texto_original}")
                print("Texto desencriptado: ", texto_original)
            except Exception as e:
                self.textoencriptado_2.setText("No hay texto para desencriptar.")
        else:
            self.textoencriptado_2.setText("No hay texto para desencriptar.")

    def limpiar_texto(self):
        self.contenido_2.clear()
        self.textoencriptado_2.clear()

    def cargar_archivo(self):
        archivo, _ = QFileDialog.getOpenFileName(
            None, "Abrir archivo", "", "Archivos de texto (*.txt)"
        )
        if archivo:
            with open(archivo, "r", encoding="utf-8") as f:
                contenido = f.read()
                self.textoencriptado_2.setText(contenido)

    def guardar_archivo(self):
        archivo, _ = QFileDialog.getSaveFileName(
            None, "Guardar archivo", "", "Archivos de texto (*.txt)"
        )
        if archivo:
            texto_a_guardar = self.textoencriptado_2.text().strip()
            with open(archivo, "w", encoding="utf-8") as f:
                f.write(texto_a_guardar)

    def cargar_imagen(self):
        archivo, _ = QFileDialog.getOpenFileName(
            None, "Cargar Imagen", "", "Imágenes (*.png *.jpg *.bmp *.jpeg, *enc)"
        )
        if archivo:
            self.ruta_imagen_original = archivo
            pixmap = QtGui.QPixmap(archivo)
            pixmap = pixmap.scaled(361, 231, QtCore.Qt.KeepAspectRatio)
            self.imagenEncriptada.setPixmap(pixmap)
            print(f"Imagen cargada: {archivo}")

    def encriptar_imagen(self):
        if not self.ruta_imagen_original:
            print("No se ha seleccionado ninguna imagen")
            return
        imagen = QImage(self.ruta_imagen_original)
        if imagen.isNull():
            print("No se puede cargar la imagen")
            return

        imagen_rgb = imagen.convertToFormat(QImage.Format_RGB888)

        width = imagen_rgb.width()
        height = imagen_rgb.height()
        expected_size = width * height * 3
        ptr = imagen_rgb.bits()
        ptr.setsize(imagen_rgb.byteCount())
        arr = np.array(ptr)
        if arr.size != expected_size:
            print(
                f"El tamaño de los datos ({arr.size}) no coincide con las dimensiones esperadas ({expected_size})."
            )
            return
        arr = np.array(ptr).reshape((height, width, 3))

        pixeles = cv2.resize(
            arr,
            (arr.shape[1] // 50, arr.shape[0] // 50),
            interpolation=cv2.INTER_LINEAR,
        )
        pixeles = cv2.resize(
            pixeles, (arr.shape[1], arr.shape[0]), interpolation=cv2.INTER_NEAREST
        )

        img_encriptada = QImage(
            pixeles.data,
            pixeles.shape[1],
            pixeles.shape[0],
            pixeles.strides[0],
            QImage.Format_RGB888,
        )

        self.imagenEncriptada.setPixmap(
            QPixmap.fromImage(img_encriptada).scaled(361, 231, Qt.KeepAspectRatio)
        )

        archivo_salida, _ = QFileDialog.getSaveFileName(
            None, "Guardar imagen pixeleada", "", "Imágenes (*.png *.jpg *.bmp)"
        )
        if archivo_salida:
            cv2.imwrite(archivo_salida, pixeles)
            print(f"Imagen pixeleada guardada en: {archivo_salida}")
        self.datos_imagen_encriptados = self.ruta_imagen_original

    def desencriptar_imagen(self):
        if not self.ruta_imagen_original:
            self.imagenEncriptada.setText("No hay imagen cargada para desencriptar.")
            return

        imagen_original = cv2.imread(self.ruta_imagen_original)
        if imagen_original is None:
            self.imagenEncriptada.setText("No se pudo cargar la imagen original.")
            return

        archivo_salida, _ = QFileDialog.getSaveFileName(
            None,
            "Guardar imagen desencriptada",
            "",
            "Imágenes (*.png *.jpg *.bmp, *enc)",
        )
        if archivo_salida:
            cv2.imwrite(archivo_salida, imagen_original)
            pixmap = QPixmap(archivo_salida)
            self.imagenEncriptada.setPixmap(pixmap.scaled(361, 231, Qt.KeepAspectRatio))
            print(f"Imagen desencriptada y guardada en {archivo_salida}")
        else:
            self.imagenEncriptada.setText(
                "No se seleccionó un destino para guardar la imagen desencriptada."
            )

    def limpiar_imagen(self):
        self.ruta_imagen_original = None
        self.datos_imagen_encriptados = None
        self.imagenEncriptada.clear()
        self.imagenEncriptada.setText("Imagen eliminada")
        print("Imagen limpiada")


    def guardar_imagen_enc(self):
        if hasattr(self, "datos_imagen_encriptados") and self.datos_imagen_encriptados:
            archivo, _ = QFileDialog.getSaveFileName(
                None, "Guardar archivo", "", "Archivos encriptados (*.enc)"
            )
            if archivo:
                try:
                    with open(archivo, "wb") as f:
                        with open(self.datos_imagen_encriptados, "rb") as original_file:
                            f.write(original_file.read())
                    QMessageBox.information(
                        None,
                        "Guardado exitoso",
                        "La imagen encriptada se guardó correctamente.",
                    )
                except Exception as e:
                    QMessageBox.critical(
                        None, "Error", f"Hubo un problema al guardar la imagen: {e}"
                    )
            else:
                QMessageBox.warning(
                    None, "Cancelado", "No se seleccionó un destino para guardar la imagen."
                )
        else:
            QMessageBox.warning(
                None, "Sin imagen", "No hay ninguna imagen encriptada para guardar."
            )


if __name__ == "__main__":
    import sys

    app = QtWidgets.QApplication(sys.argv)
    frmEncriptar = QtWidgets.QMainWindow()
    ui = Ui_frmEncriptar()
    ui.setupUi(frmEncriptar)
    frmEncriptar.show()
    sys.exit(app.exec_())
